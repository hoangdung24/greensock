name: Deploy Artifact

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        id: deps-node-modules
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deps-node-modules-
      - name: Install dependencies
        if: steps.deps-node-modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Build
        run: npm run build
      - name: Publish JS file
        id: publish
        # run: ls ./dist
        run: find dist/*.js -type f -exec echo 'script-file=' >> $GITHUB_OUTPUT '{}' ';'
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: demo-artifact
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        id: deps-node-modules
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            deps-node-modules-
      - name: Install dependencies
        if: steps.deps-node-modules.outputs.cache-hit != 'true'
        run: npm install
      - name: Get Artifact
        uses: actions/download-artifact@v3
        with:
          name: demo-artifact
      - name: Echo Contents
        run: ls
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Github Context
        run: echo "${{ github }}"
      - name: deploy
        run: echo "Deploying..."
#
